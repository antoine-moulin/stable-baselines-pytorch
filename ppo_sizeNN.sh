# python3 train.py --algo ppo --env HalfCheetahBulletEnv-v0 --n-timesteps 5000000 --log-folder logs/sizeNN --seed 123 --eval-freq 500000 --hyperparams device:\'cpu\' policy_kwargs:"dict(net_arch=[dict(pi=[16, 16], vf=[16, 16])])"
# python3 train.py --algo ppo --env HalfCheetahBulletEnv-v0 --n-timesteps 5000000 --log-folder logs/sizeNN --seed 123 --eval-freq 500000 --hyperparams device:\'cpu\' policy_kwargs:"dict(net_arch=[dict(pi=[32, 32], vf=[32, 32])])"
# python3 train.py --algo ppo --env HalfCheetahBulletEnv-v0 --n-timesteps 5000000 --log-folder logs/sizeNN --seed 123 --eval-freq 500000 --hyperparams device:\'cpu\' policy_kwargs:"dict(net_arch=[dict(pi=[64, 64], vf=[64, 64])])"
# python3 train.py --algo ppo --env HalfCheetahBulletEnv-v0 --n-timesteps 5000000 --log-folder logs/sizeNN --seed 123 --eval-freq 500000 --hyperparams device:\'cpu\' policy_kwargs:"dict(net_arch=[dict(pi=[128, 128], vf=[128, 128])])"
# python3 train.py --algo ppo --env HalfCheetahBulletEnv-v0 --n-timesteps 5000000 --log-folder logs/sizeNN --seed 123 --eval-freq 500000 --hyperparams device:\'cpu\' policy_kwargs:"dict(net_arch=[dict(pi=[256, 256], vf=[256, 256])])"
python3 train.py --algo ppo --env HalfCheetahBulletEnv-v0 --n-timesteps 5000000 --log-folder logs/sizeNN --seed 123 --eval-freq 500000 --hyperparams device:\'cpu\' policy_kwargs:"dict(net_arch=[dict(pi=[512, 512], vf=[512, 512])])"
# python3 train.py --algo ppo --env HalfCheetahBulletEnv-v0 --n-timesteps 5000000 --log-folder logs/sizeNN --seed 456 --eval-freq 500000 --hyperparams device:\'cpu\' policy_kwargs:"dict(net_arch=[dict(pi=[16, 16], vf=[16, 16])])"
# python3 train.py --algo ppo --env HalfCheetahBulletEnv-v0 --n-timesteps 5000000 --log-folder logs/sizeNN --seed 456 --eval-freq 500000 --hyperparams device:\'cpu\' policy_kwargs:"dict(net_arch=[dict(pi=[32, 32], vf=[32, 32])])"
# python3 train.py --algo ppo --env HalfCheetahBulletEnv-v0 --n-timesteps 5000000 --log-folder logs/sizeNN --seed 456 --eval-freq 500000 --hyperparams device:\'cpu\' policy_kwargs:"dict(net_arch=[dict(pi=[64, 64], vf=[64, 64])])"
python3 train.py --algo ppo --env HalfCheetahBulletEnv-v0 --n-timesteps 5000000 --log-folder logs/sizeNN --seed 456 --eval-freq 500000 --hyperparams device:\'cpu\' policy_kwargs:"dict(net_arch=[dict(pi=[128, 128], vf=[128, 128])])"
python3 train.py --algo ppo --env HalfCheetahBulletEnv-v0 --n-timesteps 5000000 --log-folder logs/sizeNN --seed 456 --eval-freq 500000 --hyperparams device:\'cpu\' policy_kwargs:"dict(net_arch=[dict(pi=[256, 256], vf=[256, 256])])"
python3 train.py --algo ppo --env HalfCheetahBulletEnv-v0 --n-timesteps 5000000 --log-folder logs/sizeNN --seed 456 --eval-freq 500000 --hyperparams device:\'cpu\' policy_kwargs:"dict(net_arch=[dict(pi=[512, 512], vf=[512, 512])])"
python3 train.py --algo ppo --env HalfCheetahBulletEnv-v0 --n-timesteps 5000000 --log-folder logs/sizeNN --seed 789 --eval-freq 500000 --hyperparams device:\'cpu\' policy_kwargs:"dict(net_arch=[dict(pi=[16, 16], vf=[16, 16])])"
python3 train.py --algo ppo --env HalfCheetahBulletEnv-v0 --n-timesteps 5000000 --log-folder logs/sizeNN --seed 789 --eval-freq 500000 --hyperparams device:\'cpu\' policy_kwargs:"dict(net_arch=[dict(pi=[32, 32], vf=[32, 32])])"
python3 train.py --algo ppo --env HalfCheetahBulletEnv-v0 --n-timesteps 5000000 --log-folder logs/sizeNN --seed 789 --eval-freq 500000 --hyperparams device:\'cpu\' policy_kwargs:"dict(net_arch=[dict(pi=[64, 64], vf=[64, 64])])"
python3 train.py --algo ppo --env HalfCheetahBulletEnv-v0 --n-timesteps 5000000 --log-folder logs/sizeNN --seed 789 --eval-freq 500000 --hyperparams device:\'cpu\' policy_kwargs:"dict(net_arch=[dict(pi=[128, 128], vf=[128, 128])])"
python3 train.py --algo ppo --env HalfCheetahBulletEnv-v0 --n-timesteps 5000000 --log-folder logs/sizeNN --seed 789 --eval-freq 500000 --hyperparams device:\'cpu\' policy_kwargs:"dict(net_arch=[dict(pi=[256, 256], vf=[256, 256])])"
python3 train.py --algo ppo --env HalfCheetahBulletEnv-v0 --n-timesteps 5000000 --log-folder logs/sizeNN --seed 789 --eval-freq 500000 --hyperparams device:\'cpu\' policy_kwargs:"dict(net_arch=[dict(pi=[512, 512], vf=[512, 512])])"